/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package laboratorium.aggigie;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.NullAndEmptySource;
import org.junit.jupiter.params.provider.ValueSource;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;

import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class FriendshipsMongoTest {
    private IFriendsCollection friendsCollectionMock = mock(IFriendsCollection.class);
    private FriendshipsMongo sut;

    @BeforeEach
    public void setup(){
        friendsCollectionMock = mock(IFriendsCollection.class);
        sut = new FriendshipsMongo(friendsCollectionMock);
    }

    @Test
    public void testGetFriendsListOfPerson(){
        final String personsName = "friend";
        final String friendsName = "mate";
        Person person = new Person(personsName);
        person.addFriend(friendsName);
        when(friendsCollectionMock.findByName(personsName)).thenReturn(person);
        assertIterableEquals(Arrays.asList(friendsName), this.sut.getFriendsList(personsName));
        verify(friendsCollectionMock).findByName(personsName);
    }

    @Test
    public void testNonExistingFriends(){
        when(friendsCollectionMock.findByName(anyString())).thenReturn(null);
        assertFalse(this.sut.areFriends("N/A", "n/a"));
    }
}
